/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import FactsBaseController.DataBaseController;
import FactsBaseHandler.ConnectionHandler;
import java.awt.Checkbox;
import java.awt.CheckboxGroup;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;

/**
 *
 * @author miller.barrera
 */
public class PersonalDataForm extends javax.swing.JFrame {

    /**
     * Creates new form PersonalDataForm
     */
    private DataBaseController dbController;
    private JCheckBox[] checkGroup;

    public PersonalDataForm() {

        try {

            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonalDataForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonalDataForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonalDataForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonalDataForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        dbController = DataBaseController.getInstance();

        initComponents();

        checkGroup = new JCheckBox[5];
        checkGroup[0] = checkCardicaco;
        checkGroup[1] = checkDiabetes;
        checkGroup[2] = checkNeuro;
        checkGroup[3] = checkOsteoporosis;
        checkGroup[4] = checkRespiratorio;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblimage = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        panelData = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        txtDate = new com.toedter.calendar.JDateChooser();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblSex = new javax.swing.JLabel();
        comboSex = new javax.swing.JComboBox();
        lblWeight = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        lblImageCheck = new javax.swing.JLabel();
        lblAlergias = new javax.swing.JLabel();
        checkCardicaco = new javax.swing.JCheckBox();
        checkNeuro = new javax.swing.JCheckBox();
        checkDiabetes = new javax.swing.JCheckBox();
        checkRespiratorio = new javax.swing.JCheckBox();
        checkOsteoporosis = new javax.swing.JCheckBox();
        btnNext = new javax.swing.JButton();
        lblBackgroud = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("My Personal Trainer");
        setBackground(new java.awt.Color(102, 153, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblimage.setIcon(new javax.swing.ImageIcon("C:\\Users\\miller.barrera\\Pictures\\prof_pic.jpg")); // NOI18N
        lblimage.setToolTipText("Foto de perfil");
        lblimage.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblimage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255), 2));
        lblimage.setOpaque(true);
        lblimage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblimageMousePressed(evt);
            }
        });
        getContentPane().add(lblimage, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 130, 130));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblTitle.setLabelFor(lblTitle);
        lblTitle.setText("Datos Requeridos");
        lblTitle.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), null));
        getContentPane().add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));

        panelData.setBackground(new java.awt.Color(255, 255, 255));
        panelData.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(102, 102, 255), new java.awt.Color(51, 51, 255), new java.awt.Color(153, 153, 255))));

        lblName.setText("Nombre: (*)");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblDate.setText("Fecha de nacimiento: (*)");

        lblAddress.setText("Dirección:(*)");

        lblSex.setText("Sexo:(*)");

        comboSex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione:", "Masculino", "Femenino"}));

        lblWeight.setText("Peso(kg):(*)");

        lblHeight.setText("Estatura (cm):(*)");

        txtHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeightActionPerformed(evt);
            }
        });

        lblImageCheck.setIcon(new javax.swing.ImageIcon("C:\\Users\\miller.barrera\\Pictures\\checklist.png")); // NOI18N

        lblAlergias.setText("Información de salud:");

        checkCardicaco.setText("Cardiacos");

        checkNeuro.setText("Neurológicos");

        checkDiabetes.setText("Diabetes");

        checkRespiratorio.setText("Respiratorios");

        checkOsteoporosis.setText("Osteoporosis");

        javax.swing.GroupLayout panelDataLayout = new javax.swing.GroupLayout(panelData);
        panelData.setLayout(panelDataLayout);
        panelDataLayout.setHorizontalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDataLayout.createSequentialGroup()
                        .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblDate)
                            .addComponent(lblAddress)
                            .addComponent(lblSex)
                            .addComponent(lblWeight)
                            .addComponent(lblHeight))
                        .addGap(18, 18, 18)
                        .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDataLayout.createSequentialGroup()
                                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName)
                                    .addComponent(txtAddress)
                                    .addGroup(panelDataLayout.createSequentialGroup()
                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 35, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(panelDataLayout.createSequentialGroup()
                                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtHeight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                    .addComponent(txtWeight, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblImageCheck)
                                .addGap(25, 25, 25))
                            .addGroup(panelDataLayout.createSequentialGroup()
                                .addComponent(comboSex, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(panelDataLayout.createSequentialGroup()
                        .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAlergias)
                            .addComponent(checkDiabetes)
                            .addGroup(panelDataLayout.createSequentialGroup()
                                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkNeuro)
                                    .addComponent(checkCardicaco))
                                .addGap(18, 18, 18)
                                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkRespiratorio)
                                    .addComponent(checkOsteoporosis))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelDataLayout.setVerticalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSex)
                    .addComponent(comboSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDataLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeight)
                            .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeight)
                            .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelDataLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImageCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addComponent(lblAlergias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkCardicaco)
                    .addComponent(checkRespiratorio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkNeuro)
                    .addComponent(checkOsteoporosis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkDiabetes)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        getContentPane().add(panelData, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 360, 400));

        btnNext.setBackground(new java.awt.Color(255, 204, 51));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 0, 102));
        btnNext.setText("Siguiente");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        getContentPane().add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, 120, 50));

        lblBackgroud.setIcon(new javax.swing.ImageIcon("C:\\Users\\miller.barrera\\Pictures\\workout.jpg")); // NOI18N
        lblBackgroud.setText("jLabel1");
        getContentPane().add(lblBackgroud, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblimageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblimageMousePressed
        // TODO add your handling code here:
        System.out.println("Mouse clicked!");
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File file = chooser.getSelectedFile();

        try {
            BufferedImage image = ImageIO.read(file);
            BufferedImage bimagen = resize(image, 130, 130);
            ImageIcon icon = new ImageIcon(bimagen);
            // JLabel toBeSet = new JLabel();
            // considering that you have a JLabel having name as what I've used here
            lblimage.setIcon(icon);

        } catch (IOException ioe) {
            System.out.println("Exception occured while setting Image on the Label! " + ioe.toString());
        }
    }//GEN-LAST:event_lblimageMousePressed


    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHeightActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:      
        if (txtName.getText().isEmpty() || ((JTextField) txtDate.getDateEditor().getUiComponent()).getText().isEmpty()
                || txtAddress.getText().isEmpty() || txtWeight.getText().isEmpty() 
                || txtHeight.getText().isEmpty()) {
JOptionPane.showConfirmDialog(null, "Debe diligenciar todos los datos requeridos !", "Mensaje", JOptionPane.DEFAULT_OPTION);
        } else {
            String name = txtName.getText();
            String dateBirth = ((JTextField) txtDate.getDateEditor().getUiComponent()).getText();
            int age = calcularEdad(dateBirth);
            String sAge = String.valueOf(age);
            String address = txtAddress.getText();
            String sex = comboSex.getSelectedItem().toString();
            String weight = txtWeight.getText();
            String height = txtHeight.getText();
            String diseases = getSelectedDiseases();
            if (diseases.isEmpty()) {
                diseases = "Ninguna";
            }

            if (age < 10) {
                JOptionPane.showConfirmDialog(null, "- Nuestras rutinas no son apropiadas para usuario con edades inferiores a 10 años!", "Mensaje", JOptionPane.OK_OPTION);
            } else {
                insertDataIntoFactsBaseDB(name, dateBirth, sAge, address, sex, weight, height, diseases);
            }

        }


    }//GEN-LAST:event_btnNextActionPerformed

    private String getSelectedDiseases() {
        String selection = "";
        for (int i = 0; i < checkGroup.length; i++) {
            if (checkGroup[i].isSelected()) {
                selection += checkGroup[i].getText() + ",";
            }
        }

        System.out.println(selection);
        return selection;
    }

    /**
     * Método para insertar los datos en la base de hechos
     *
     * @param name nombre
     * @param birth_Date fecha de nacimiento
     * @param age edad
     * @param address dirección
     * @param sex sexo
     * @param weight peso
     * @param height altura
     * @param diseases enfermedades
     *
     *
     */
    private void insertDataIntoFactsBaseDB(String name, String birth_Date, String age,
            String address, String sex, String weight, String height, String diseases) {

        int queryResult = dbController.sqlInsertFacts(name, birth_Date, age, address, sex, weight, height, diseases);

        if (queryResult == 1) {
            JOptionPane.showConfirmDialog(null, "- Base de Hechos registrada correctamente!", "Mensaje", JOptionPane.OK_OPTION);

            showRoutinesScreen();
        } else {
            JOptionPane.showConfirmDialog(null, "- Error Actualizando Base de Hechos!", "Mensaje", JOptionPane.OK_OPTION);
        }

    }

    public void showRoutinesScreen() {
        SelectRoutines routines = new SelectRoutines(txtName.getText());
        routines.setVisible(true);
        cleanFields();
    }

    /**
     * Método para cambiar dinamicamente el tamaño de la imagen de la foto de
     * perfil
     *
     * @param image imagen en bits
     * @param width ancho custom de la imagen
     * @param height alto custom de la imagen
     *
     * @return mapa int con el mapa de bits de la imagen
     */
    public static BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }

    public void cleanFields() {
        txtName.setText("");
        txtAddress.setText("");
        txtHeight.setText("");
        txtWeight.setText("");
        comboSex.setSelectedIndex(0);
        ((JTextField) txtDate.getDateEditor().getUiComponent()).setText("");
    }

    //Este es el método calcularEdad que se manda a llamar en el main
    public int calcularEdad(String fecha) {
        Date fechaNac = null;

        try {
            /**
             * Se puede cambiar la mascara por el formato de la fecha que se
             * quiera recibir, por ejemplo año mes día "yyyy-MM-dd" en este caso
             * es día mes año
             */
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyyy");
            fechaNac = (Date) df.parse(fecha);
        } catch (Exception ex) {
            System.out.println("Error:" + ex);
        }
        Calendar fechaNacimiento = Calendar.getInstance();
        //Se crea un objeto con la fecha actual
        Calendar fechaActual = Calendar.getInstance();
        //Se asigna la fecha recibida a la fecha de nacimiento.
        fechaNacimiento.setTime(fechaNac);
        //Se restan la fecha actual y la fecha de nacimiento
        int año = fechaActual.get(Calendar.YEAR) - fechaNacimiento.get(Calendar.YEAR);
        int mes = fechaActual.get(Calendar.MONTH) - fechaNacimiento.get(Calendar.MONTH);
        int dia = fechaActual.get(Calendar.DATE) - fechaNacimiento.get(Calendar.DATE);
        //Se ajusta el año dependiendo el mes y el día
        if (mes < 0 || (mes == 0 && dia < 0)) {
            año--;
        }
        //Regresa la edad en base a la fecha de nacimiento
        return año;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JCheckBox checkCardicaco;
    private javax.swing.JCheckBox checkDiabetes;
    private javax.swing.JCheckBox checkNeuro;
    private javax.swing.JCheckBox checkOsteoporosis;
    private javax.swing.JCheckBox checkRespiratorio;
    private javax.swing.JComboBox comboSex;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAlergias;
    private javax.swing.JLabel lblBackgroud;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblImageCheck;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSex;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblimage;
    private javax.swing.JPanel panelData;
    private javax.swing.JTextField txtAddress;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
